package com.example.serviceapplication.employee.Demoservices.Services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.example.serviceapplication.employee.Demoservices.DTO.Employeeservicesrepository;
import com.example.serviceapplication.employee.Demoservices.Dao.Department;
import com.example.serviceapplication.employee.Demoservices.Dao.ResponsTemplate;
import com.example.serviceapplication.employee.Demoservices.Entety.Employee;

import lombok.extern.slf4j.Slf4j;
@Service
@Slf4j
public class EmployeeservicessImpl implements Employeeservicess {

	@Autowired
	private Employeeservicesrepository employeeservicesrepository;
	
	Autowired
	private RestTemplate resttemplte;

	@Override
	public List<Employee> getAllEmployees() {
		List<Employee> getAllEmployees = null;
		getAllEmployees = employeeservicesrepository.findAll().stream().filter(p -> p.getDeletes() != 0)
				.collect(Collectors.toList());

		return getAllEmployees;
	}

	@Override
	public Optional<Employee> findAllById(int employee_id) {
	
		return employeeservicesrepository.findById(employee_id);

	}

	@Override
	public Employee createOrSaveEmployee(Employee newEmployee) {

		return employeeservicesrepository.save(newEmployee);

	}

	@Override
	public ResponsTemplate getEmployeedetailsById(int employee_id) {

		ResponsTemplate RT =new ResponsTemplate();
		Optional<Employee> newEmployee = employeeservicesrepository.findById(employee_id);
		
		Department department = 
		
		
		return null;
	}

}
